== Configuration Form ==
The common configuration interface is used to specify parameters of different system components, in particular:
* Active providers specified on the [[ Admin:Providers | Data Providers ]] page.
* Widgets embedded to wiki pages using the [[ Help:Widgets | wiki editor ]].
* Widgets linked to semantic resources on the [[ Admin:Widgets | Widget Configuration ]] page.

<img src="../images/help/configuration-form.png" width="600px" />

The example above shows configuration parameters of a widget to be added to a wiki page.
The configuration form shows the type of the edited widget on top (in this case ''ActionableResultWidget'') and the list of its configuration parameters. 
The name of each configuration parameter is shown on the left, while its corresponding edit control is displayed on the right. 
The information about the meaning of the parameter is shown in a tooltip when hovering the mouse cursor over the information sign (displayed as the ''i'' symbol next to the parameter's edit control). 
The example above shows the information tooltip for the ''labels'' parameter of the widget.

Depending on the type of the widget/provider, some configuration parameters are required to have a value (their names are marked with the star '*' sign, like for the 'query' parameter in the example above), while others are optional and can be left unspecified.

The edit control for each parameter depends on its type: e.g., boolean or multiple-choice parameters are set using a drop-down box instead of the default text edit field. 
Furthermore, the input of the text edit boxes gets validated for its conformance to the expected datatype: e.g., entering ''abcdef'' if a numeric value is expected will make the configuration invalid. Edit boxes with invalid values are displayed in red, while green indicates that the value is in an acceptable format.

=== Editing lists and complex structures ===
Some parameters can themselves be composite, for example containing lists of values or complex structures including different sub-parameters. In the example above, the parameters ''rowActions'' and ''selectedRowActions'' represent lists of such multi-parameter structures. 
For lists, new items can be added by clicking on the '+' icon shown under the last element. 
A list can be expanded/collapsed by clicking on the 'show' and 'hide' icons shown on top of the list.

If a parameter value represents a complex structure, instead of a single input element (text edit box, drop-down box, or text area) a sub-form is shown, which displays edit controls for all sub-parameters. 
The values can be entered in the sub-form in the same way as in the top-level form.

=== Editing SPARQL queries ===
Sometimes, a SPARQL query or a query template is expected as a value of a parameter  (e.g., the ''query'' parameter in the example above). While such a query can be edited as a usual text field in its corresponding text area, it is more convenient to use a special ''SPARQL editing dialog'', which supports syntax highlighting, query validation, and content autosuggestion. The dialog can be opened using 'SPARQL' button 

<img src="../images/help/sparql-dialog.png" width="800px" />

The dialog allows editing a SPARQL query in the same way as using the [[Help:SPARQLEndpoint | SPARQL endpoint interface]].
The parameter value is set when you click on the 'Done' button.

=== Operator input form ===
An alternative way to specify parameter values is to use the [[Help:AdvancedWidgetConfiguration#Dynamic_Operators| dynamic operators]] to specify how to select the values automatically from the underlying data store. 

A dynamic operator can include a SPARQL SELECT query which defines the values of the parameters. To open this dialog for a given configuration option, click on the <img src="../images/widget/op.png"/> button. The dialog contains the SPARQL query editing form as well as list of parameters, which can be used as projections in the query to define the respective config setting. Consider the example given on [[Help:GMap]] for illustration, where the markers are retrieved via a SELECT query.
