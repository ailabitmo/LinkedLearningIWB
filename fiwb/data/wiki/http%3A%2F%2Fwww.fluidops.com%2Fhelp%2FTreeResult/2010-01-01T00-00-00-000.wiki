=== Tree Result Widget ===

==== Functionality ====
{{#widget: com.fluidops.iwb.widget.DisplayConfigurationWidget
| clazz = com.fluidops.iwb.widget.visualization.TreeResultWidget
| type = 'DESCRIPTION'
}}
Go back to [[Help:Widgets | Widgets ]]

==== Configuration Settings ====

{{#widget: com.fluidops.iwb.widget.DisplayConfigurationWidget
| clazz = com.fluidops.iwb.widget.visualization.TreeResultWidget
}}


The tree result widget is a flexible component for visualizing hierarchical data in a tree.

Main functionality

*  Specification of a bootstrap query and (recursive) child configurations
*  The actual node can be referenced via ?:node in child configuration queries
*  The layout can be configured using a templating mechanism
*  Icons can be rendered using the special ?icon projection variable

In the following, we will describe the usage of this widget by means of a few examples

===== a) A three level configuration showing classes and instances (limited to 10), list properties for each instance =====

As a first illustration we want to depict a tree where the root nodes are instances of ''owl:Class'' and the children are the instances of the particular class. The result for such a tree is illustrated in the following (Note: to reproduce this example the wine ontology data is required).

<img src="../images/help/TreeResult/TreeResultWidget_Ex1.png" />

As you can observe in the following configuration (and in the widget configuration UI) the widget can be configured by providing a bootstrap query for the root nodes. Then as ''childConfig'' it is possible to reference the current node from within the query with the special ''?:node'' token. Note that child configurations can be nested arbitrarily.

<source>
{{#widget: Tree
| query = 'SELECT ?Class WHERE { ?Class rdf:type owl:Class }'
| childConfig = {{ 
     query = 'SELECT ?Instance WHERE { ?Instance rdf:type ?:node } LIMIT 10' | 
     childConfig = 
 	 {{ query = 'SELECT DISTINCT ?Property WHERE { ?:node ?Property ?o }' }} 
     }}
}}  
</source>

Illustration of widget configuration UI for this example:


<img src="../images/help/TreeResult/TreeResultWidgetConfigurationEx1.png" />



===== b) Applying templates to customize the appearance of nodes =====

The tree result widget brings a templating mechanism which allows to customize the rendering of nodes. Variables from the query can be access with the ''<nowiki>{{{variableName}}}</nowiki>'' notation. Note that the first projection variable is always used as a node value.

<source>
{{#widget: Tree
 | query = 'SELECT ?Class WHERE { ?Class rdf:type owl:Class }'
 | childConfig = {{
      query = 'SELECT ?instance ?comment WHERE { ?instance rdf:type ?:node . OPTIONAL { ?instance rdfs:comment ?comment } } LIMIT 10' 
      | template = '{{{instance}}} (Comment: {{{comment}}})' 
      }}
 }}
</source>

===== c) Rendering image icons for nodes =====

Using the special projection variable ''?icon'' it is possible to render icons in front of the node.

<source>
{{#widget: Tree
| query = 'SELECT ?Class ?icon WHERE { ?Class rdf:type owl:Class . BIND ("/favicon.ico" AS ?icon) } LIMIT 2'
}}
</source>